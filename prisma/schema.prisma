// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EnumRole {
  ADMIN
  USER
}

enum EnumInvoiceStatus {
  ANALYZED
  ERROR
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name String
  role EnumRole @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  invoices Invoice[]
  AuthTokens AuthTokens[]
}

model AuthTokens {
  id        String   @id @default(uuid())
  userId    String
  authToken     String
  refreshToken     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
}

model Invoice {
  id        String   @id @default(uuid())
  userId    String
  invoiceNumber String
  invoiceDate DateTime
  invoiceAmount Decimal
  invoiceStatus String
  invoiceUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])

  interactions Interaction[]
  invoiceItems InvoiceItem[]
}

model InvoiceItem {
  id        String   @id @default(uuid())
  invoiceId String
  itemName String
  itemQuantity Int
  itemPrice Decimal
  itemTotal Decimal

  invoice Invoice @relation(fields: [invoiceId], references: [id])
}

model Interaction {
  id        String   @id @default(uuid())
  invoiceId String
  interactionType String
  interactionData String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  invoice Invoice @relation(fields: [invoiceId], references: [id])
}
